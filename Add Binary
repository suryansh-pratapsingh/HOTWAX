
    int lenA = strlen(a);
    int lenB = strlen(b);
    int maxLen = (lenA > lenB ? lenA : lenB) + 1;

    char* result = (char*)malloc(maxLen + 1);
    if (!result) return NULL;

    result[maxLen] = '\0';
    int carry = 0, i = lenA - 1, j = lenB - 1, k = maxLen - 1;

    while (i >= 0 || j >= 0 || carry) {
        int bitA = (i >= 0) ? a[i] - '0' : 0;
        int bitB = (j >= 0) ? b[j] - '0' : 0;
        int sum = bitA + bitB + carry;
        result[k] = (sum % 2) + '0';
        carry = sum / 2;
        i--; j--; k--;
    }

    if (result[0] == '0') {
        if (result[1] == '\0') {  // If the result is exactly "0"
            free(result);
            return strdup("0");
        }
        char* trimmedResult = strdup(result + 1);
        free(result);
        return trimmedResult;
    }

    return result;
